:root {
	/* Color Variables */
	--primary-color: #007bff; /* Vibrant Blue */
	--text-color: #333; /* Dark Gray */
	--background-color: #f8f9fa; /* Light Gray */
	
	/* Spacing Variables */
	--spacing-small: 0.5rem; /* 8px */
	--spacing-medium: 1rem;   /* 16px */
	--spacing-large: 2rem;    /* 32px */
	
	/* Font Size Variables */
	--font-size-normal: 1rem;   /* 16px */
	--font-size-large: 1.5rem;  /* 24px */
  }
  
  .profile-card {
	position: relative;
	background-color: var(--background-color);
	color: var(--text-color);
	padding: var(--spacing-medium);
	border-radius: var(--spacing-small);
	max-width: 18.75rem; /* 300px converted to rem */
	box-shadow: 0 0.25rem 0.375rem rgba(0,0,0,0.1);
  }
  
  .profile-card::after {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-image: linear-gradient(45deg, rgba(255,255,255,0.3) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.3) 50%, rgba(255,255,255,0.3) 75%, transparent 75%, transparent);
	background-size: 1rem 1rem; /* Size of the checkerboard pattern */
	mix-blend-mode: difference; /* Creates dynamic blend effect */
	transition: opacity 0.3s ease;
	opacity: 0; /* Hidden by default */
  }
  
  .profile-picture {
	width: 100%;
	border-radius: 50%;
	margin-bottom: var(--spacing-medium);
  }
  
  .profile-info {
	text-align: center;
  }
  
  .profile-name {
	margin: 0;
	color: var(--primary-color);
	font-size: var(--font-size-large);
  }
  
  .profile-description {
	font-size: var(--font-size-normal);
  }
  
  /* Using @supports to check for filter property support */
  @supports (filter: blur(5px)) {
	.profile-picture:hover {
	  /* Applies a blur effect on hover if supported */
	  filter: blur(5px);
	}
  }
  
/**
 * This CSS code defines the aspect-ratio property.
 * The aspect-ratio property is used to specify the aspect ratio of an element's box.
 * It allows you to control the width and height of an element while maintaining a specific aspect ratio.
 */
/* aspect-ratio   */
  .element-aspect-ratio {
	width: 80%;
	height: 500px;
  }
  .element-aspect-ratio .inner{
	aspect-ratio: 16 / 9;
	background: #ddd;
  }

/**
 * - color-scheme: Specifies the preferred color scheme for the user interface.
 *   - Values: light | dark
 */
 /* :root {
	color-scheme: dark;
} */
.wrapper-color-scheme {
	color-scheme: dark;
}
  
/**
 * - container-type: Specifies the type of container to use for layout.
 *   - Values: inline | block | flex | grid
 */
 .wrapper-element-container-type{
	width: 80%;
	background-color: tomato;
 }
 @container (min-width: 500px) {
	.element-container-type {
	  display: flex;
	}
 }

 /**
 * - With the @layer rule, you can define different layers or scopes for your CSS rules.
 *   Each layer can contain its own set of CSS rules, and you can apply different layers to different parts of your code.
 */

 @layer module, state;

 @layer state {
   p {
	color: orange;
	font-size: 5rem;
   }
 }
 
 @layer module {
   p{
	font-size: 2rem;
	color: black;
   }
}